// Generated by *go generate* - DO NOT EDIT
/*
Copyright 2022-23. projectsveltos.io. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package crd

var SveltosLicenseFile = "../../manifests/apiextensions.k8s.io_v1_customresourcedefinition_sveltoslicenses.lib.projectsveltos.io.yaml"
var SveltosLicenseCRD = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: sveltoslicenses.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: SveltosLicense
    listKind: SveltosLicenseList
    plural: sveltoslicenses
    singular: sveltoslicense
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: SveltosLicense is the Schema for the clustersets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: SveltosLicenseStatus defines the observed state of SveltosLicense
            properties:
              expirationDate:
                description: |-
                  ExpirationDate is the exact expiration timestamp from the license payload,
                  if a license was found and successfully parsed. This field will be present
                  even if the license is expired or invalid, as long as the date could be extracted.
                format: date-time
                type: string
              features:
                description: Features is a list of feature strings enabled by this
                  license.
                items:
                  type: string
                type: array
              maxClusters:
                description: MaxClusters is the maximum number of clusters allowed
                  for this license.
                type: integer
              message:
                description: Message provides a human-readable explanation of the
                  current license status.
                type: string
              status:
                description: |-
                  Status indicates the overall state of the license.
                  Possible values:
                  - Valid: License secret found, valid signature, not expired.
                  - Expired: License secret found, valid signature, but expired.
                  - Invalid: License secret found, but signature invalid or data malformed.
                  - NotFound: No license secret found at the specified reference.
                enum:
                - Valid
                - Expired
                - Invalid
                - NotFound
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
`)
