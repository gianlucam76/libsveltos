---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: configurationgroups.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ConfigurationGroup
    listKind: ConfigurationGroupList
    plural: configurationgroups
    singular: configurationgroup
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ConfigurationGroup is the Schema for the configurationgroup API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              action:
                default: Deploy
                enum:
                - Deploy
                - Remove
                type: string
              configurationItem:
                description: ConfigurationItems represents a list of configurations
                  to deploy
                items:
                  properties:
                    contentRef:
                      description: |-
                        ContentRef references the Kubernetes resource containing
                        the content to deploy.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    hash:
                      description: |-
                        Hash represents of a unique value for the content stored in
                        the referenced contentRef
                      format: byte
                      type: string
                  type: object
                type: array
              continueOnConflict:
                default: false
                description: |-
                  By default (when ContinueOnConflict is unset or set to false), Sveltos stops deployment after
                  encountering the first conflict (e.g., another ClusterProfile already deployed the resource).
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if conflicts are detected for previous resources.
                type: boolean
              continueOnError:
                default: false
                description: |-
                  By default (when ContinueOnError is unset or set to false), Sveltos stops deployment after
                  encountering the first error.
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if errors are detected for previous resources.
                type: boolean
              deployedGroupVersionKind:
                description: |-
                  DeployedGroupVersionKind contains all GroupVersionKinds deployed in either
                  the workload cluster or the management cluster because of this feature.
                  Each element has format kind.version.group
                items:
                  type: string
                type: array
              driftDetection:
                default: false
                description: |-
                  DriftDetection indicates Sveltos must monitors deployed for resources configuration
                  drift. If drift is detected, a reconciliation is triggered to ensure the managed
                  cluster's configuration aligns with the expected configuration defined in the management
                  cluster
                type: boolean
              driftExclusions:
                description: |-
                  DriftExclusions is a list of configuration drift exclusions to be applied when syncMode is
                  set to ContinuousWithDriftDetection. Each exclusion specifies JSON6902 paths to ignore
                  when evaluating drift, optionally targeting specific resources and features.
                items:
                  properties:
                    paths:
                      description: Paths is a slice of JSON6902 paths to exclude from
                        configuration drift evaluation.
                      items:
                        type: string
                      type: array
                    target:
                      description: Target points to the resources that the paths refers
                        to.
                      properties:
                        annotationSelector:
                          description: |-
                            AnnotationSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                          type: string
                        group:
                          description: |-
                            Group is the API group to select resources from.
                            Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        kind:
                          description: |-
                            Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                          type: string
                        name:
                          description: Name to match resources with.
                          type: string
                        namespace:
                          description: Namespace to select resources from.
                          type: string
                        version:
                          description: |-
                            Version of the API Group to select resources from.
                            Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                      type: object
                  required:
                  - paths
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              dryRun:
                default: false
                description: |-
                  DryRun means no change will be propagated to matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made by this ConfigurationGroup
                type: boolean
              leavePolicies:
                default: false
                description: Indicates whether deployed resources must be left on
                  the managed cluster.
                type: boolean
              maxConsecutiveFailures:
                description: |-
                  The maximum number of consecutive deployment failures that Sveltos will permit.
                  After this many consecutive failures, the deployment will be considered failed, and Sveltos will stop retrying.
                  This setting applies only to feature deployments, not resource removal.
                  This field is optional. If not set, Sveltos default behavior is to keep retrying.
                type: integer
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ConfigurationGroup need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              requestorHash:
                description: |-
                  RequestorHash represents a hash of the state of the requestor that created this ConfigurationGroup.
                  This field is optional and can be used to determine when the creating resource's state has
                  changed and the ConfigurationGroup needs to be updated accordingly.
                format: byte
                type: string
              sourceRef:
                description: |-
                  SourceRef is the user facing Sveltos resource that caused this ConfigurationGroup to be
                  created. For instance, when a ClusterSummary creates a ConfigurationGroup, the user
                  facing resource is either a ClusterProfile or a Profile.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              tier:
                default: 100
                description: |-
                  Tier controls the order of deployment for ClusterProfile or Profile resources targeting
                  the same cluster resources.
                  Imagine two configurations (ClusterProfiles or Profiles) trying to deploy the same resource (a Kubernetes
                  resource or an helm chart). By default, the first one to reach the cluster "wins" and deploys it.
                  Tier allows you to override this. When conflicts arise, the ClusterProfile or Profile with the **lowest**
                  Tier value takes priority and deploys the resource.
                  Higher Tier values represent lower priority. The default Tier value is 100.
                  Using Tiers provides finer control over resource deployment within your cluster, particularly useful
                  when multiple configurations manage the same resources.
                format: int32
                minimum: 1
                type: integer
              updatePhase:
                default: Ready
                description: |-
                  UpdatePhase indicates the current phase of configuration updates. When set to "Preparing",
                  it signals that a new version of this ConfigurationGroup is being prepared, forcing
                  metadata.generation to advance. This allows detection of differences between
                  status.observedGeneration and metadata.generation when agents process an older version,
                  enabling tracking of update propagation across managed clusters.
                enum:
                - Ready
                - Preparing
                type: string
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            - Has
                            - DoesNotHave
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            properties:
              deployedGroupVersionKind:
                description: |-
                  DeployedGroupVersionKind contains all GroupVersionKinds deployed because of
                  the ConfigurationGroup.
                  Each element has format kind.version.group
                items:
                  type: string
                type: array
              failureMessage:
                description: FailureMessage provides more information about the error.
                type: string
              lastAppliedTime:
                description: LastAppliedTime is the time feature was last reconciled
                format: date-time
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration reflects the generation of the most recently observed ConfigurationGroup.
                  When this value matches the ConfigurationGroup's metadata.generation, it indicates that the
                  status reflects the latest desired specification. If observedGeneration is less than generation,
                  it means the controller has not yet processed the latest changes to the specification.
                format: int64
                type: integer
              observedRequestorHash:
                description: |-
                  ObservedRequestorHash reflects the requestor hash that was last processed by the controller.
                  When this value matches the spec.requestorHash, it indicates that the controller has
                  processed the latest state of the creating resource. If observedRequestorHash differs
                  from spec.requestorHash, it means the requestor has changed and reconciliation is needed.
                format: byte
                type: string
              status:
                description: Status represents the state of the feature in the workload
                  cluster
                enum:
                - Provisioning
                - Provisioned
                - Failed
                - FailedNonRetriable
                - Removing
                - Removed
                - AgentRemoving
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
